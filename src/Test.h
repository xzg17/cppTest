#include <math.h> 
int chick[12][1]={
    {-1},{-1},{-1},
    {0}, {1}, {2},
    {3}, {4}, {5},
    {6}, {7}, {8}
};
int jiraffe[12][4]={
    {1, 3,-1,-1},{0, 2, 4,-1},{1, 5,-1,-1},
    {0, 4, 6,-1},{1, 3, 5, 7},{2, 4, 8,-1},
    {3, 7, 9,-1},{4, 6, 8,10},{5, 7,11,-1},
    {6,10,-1,-1},{7, 9,11,-1},{8,10,-1,-1}
};
int elephant[12][4]={
    {4,-1,-1,-1},{3, 5,-1,-1},{4,-1,-1,-1},
    {1, 7,-1,-1},{0, 2, 6, 8},{1, 7,-1,-1},
    {4,10,-1,-1},{3, 5, 9,11},{4,10,-1,-1},
    {7,-1,-1,-1},{6, 8,-1,-1},{7,-1,-1,-1}
};
int lion[13][12]={
    {1, 3, 4,12,-1,-1,-1,-1,-1,-1,-1,-1},
    {0, 2, 3, 4, 5,12,-1,-1,-1,-1,-1,-1},
    {1, 4, 5,12,-1,-1,-1,-1,-1,-1,-1,-1},
    {0, 1, 4, 6, 7,-1,-1,-1,-1,-1,-1,-1},
    {0, 1, 2, 3, 5, 6, 7, 8,-1,-1,-1,-1},
    {1, 2, 4, 7, 8,-1,-1,-1,-1,-1,-1,-1},
    {3, 4, 7, 9,10,-1,-1,-1,-1,-1,-1,-1},
    {3, 4, 5, 6, 8, 9,10,11,-1,-1,-1,-1},
    {4, 5, 7,10,11,-1,-1,-1,-1,-1,-1,-1},
    {6, 7,10,-1,-1,-1,-1,-1,-1,-1,-1,-1},
    {6, 7, 8, 9,11,-1,-1,-1,-1,-1,-1,-1},
    {7, 8,10,-1,-1,-1,-1,-1,-1,-1,-1,-1},
    {0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11}
};
int hen[13][6]={
    {1, 3,-1,-1,-1,-1},
    {0, 2, 4,-1,-1,-1},
    {1, 5,-1,-1,-1,-1},
    
    {0, 1, 4, 6,-1,-1},
    {0, 1, 2, 3, 5, 7},
    {1, 2, 4, 8,-1,-1},
    
    {3, 4, 7, 9,-1,-1},
    {3, 4, 5, 6, 8,10},
    {4, 5, 7,11,-1,-1},
    
    {6, 7,10,-1,-1,-1},
    {6, 7, 8, 9,11,-1},
    {7, 8,10,-1,-1,-1}
};
typedef struct{
    int f;//from
    int t;//to
    int p;//piece
    int g;//get
} move;

class TestBoard{
public:
    TestBoard(int bo[13], int hands[6]);
    int push(move mo,);
    int board[12];
    int hands[6];
private:
};
TestBoard::TestBoard(int bo[13], int hands[6]){
    this->board[0] = bo[0];
    this->board[1] = bo[1];
    this->board[2] = bo[2];
    this->board[3] = bo[3];
    this->board[4] = bo[4];
    this->board[5] = bo[5];
    this->board[6] = bo[6];
    this->board[7] = bo[7];
    this->board[8] = bo[8];
    this->board[9] = bo[9];
    this->board[10] = bo[10];
    this->board[11] = bo[11];
    this->board[12] = bo[12];
};
